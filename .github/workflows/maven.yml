# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B clean install --file pom.xml

      - name: JaCoCo Report
        # You may pin to the exact commit or the version.
        # uses: Madrapps/jacoco-report@db72e7e7c96f98d239967958b0a0a6ca7d3bb45f
        uses: Madrapps/jacoco-report@v1.6.1
        with: # Comma separated paths of the generated jacoco xml files (supports wildcard glob pattern)
          paths:
          # Github personal token to add commits to Pull Request
          token:
          # The minimum code coverage that is required to pass for overall project
          min-coverage-overall: # optional, default is 80
          # The minimum code coverage that is required to pass for changed files
          min-coverage-changed-files: # optional, default is 80
          # Optional title for the Pull Request comment
          title: # optional
          # Update the coverage report comment instead of creating new ones. Requires title to works properly.
          update-comment: # optional, default is false
          # Comment won't be added if there is no coverage information present for the files changed
          skip-if-no-changes: # optional, default is false
          # Github emoji to use for pass status shown when coverage greater than min coverage (should be a Github supported emoji)
          pass-emoji: # optional, default is :green_apple:
          # Github emoji to use for fail status shown when coverage lesser than min coverage (should be a Github supported emoji)
          fail-emoji: # optional, default is :x:
          # When there is an error do not fail the action, but log a warning
          continue-on-error: # optional, default is true
          # Run the action in debug mode and get debug logs printed in console
          debug-mode: # optional, default is false

      - name: Run Tests
        run: mvn test jacoco:report

 
